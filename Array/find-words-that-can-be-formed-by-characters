https://leetcode.com/problems/find-words-that-can-be-formed-by-characters/
class Solution {
    public int countCharacters(String[] words, String chars) {
        HashMap<Character,Integer> hm = new HashMap<>();
        int cnt=0;
        for(int i=0;i<chars.length();i++)
        {
            hm.put(chars.charAt(i),hm.getOrDefault(chars.charAt(i),0)+1);
        }

        int ans[] = new int[26];
        for(int i=0;i<words.length;i++)
        {
            boolean isValid = true;
            for(int j=0;j<words[i].length();j++)
            {
                if(!hm.containsKey(words[i].charAt(j)))
                {   isValid = false;
                    break;
                }
                ans[words[i].charAt(j)-'a']++;
                if( ans[words[i].charAt(j)-'a']>hm.get(words[i].charAt(j)))
                {
                    isValid = false;
                    break;
                }  
            }
            if(isValid)
            cnt=cnt+words[i].length();
            for(int k=0;k<26;k++)
            ans[k]=0;
        }
        return cnt;
    }
}
