//https://leetcode.com/problems/shuffle-the-array/

class Solution {
    public int[] shuffle(int[] nums, int n) {
        for (int i = n; i < nums.length; i++) {
            nums[i] = nums[i] * 1001 + nums[i - n];
        }
        int index = 0;
        for (int i = n; i < nums.length; i++) {
            nums[index] = nums[i] % 1001;
            nums[index + 1] = nums[i] / 1001;
            index = index + 2;
        }
        return nums;
    }
}

you are storing both the numbers in a number after nth pos in line 6;
you have to multiply it with a number greater than input max range val, coz if 2 numbers are 1000 and 1000, and u multiply with 1000, modulo will be 0 and dvision will be 11, so instead of 1000 and 1000, u get 0 and 11...
so always take number greater than range.

other way is bit manipulation technique. the num inside 1000 will use 10 bits to be represented. so...shift 10 bits for orig num, and or it for other set. 

class Solution {
    public int[] shuffle(int[] nums, int n) {
        for (int i = n; i < nums.length; i++) {
            nums[i] = (nums[i]<<10) | nums[i - n];
        }
        int index = 0;
        for (int i = n; i < nums.length; i++) {
            nums[index] = (nums[i] & 0x3ff);
            nums[index + 1] = (nums[i]>>>10);
            index = index + 2;
        }
        return nums;
    }
}
