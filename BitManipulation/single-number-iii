https://leetcode.com/problems/single-number-iii/

class Solution {
    public int[] singleNumber(int[] nums) {
        int ans[] = new int[2];
        int fullArrayXor=0;
        for(int i=0;i<nums.length;i++)
        {
            fullArrayXor = fullArrayXor ^ nums[i];
        }

        int setBitPosition = 1;
        while(fullArrayXor!=0)
        {
            if((fullArrayXor&1)!=0)
             break;
            fullArrayXor = fullArrayXor>> 1;
            setBitPosition++;
        }

        int xorGroup1 = 0, xorGroup2 = 0;

        for(int i=0;i<nums.length;i++)
        {
            if(((nums[i]>>(setBitPosition-1))&1)==1)
            {
                xorGroup1 =  xorGroup1 ^ nums[i];
            }
            else
            {
                 xorGroup2 =  xorGroup2 ^ nums[i];
            }
        }
        ans[0] = xorGroup1;
        ans[1] = xorGroup2;
        return ans;

    }
}
