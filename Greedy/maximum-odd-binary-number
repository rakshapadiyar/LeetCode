https://leetcode.com/problems/maximum-odd-binary-number/description/

//snowball - 100%
class Solution {
    public String maximumOddBinaryNumber(String s) {
        char[] a = s.toCharArray();
        int cnt = 0; //zero count
        for(int i=0;i<a.length;i++)
        {
            if(a[i] == '1')
            {
                a[i]='0';
                a[i-cnt] = '1';
            }
            else
            {
                cnt++;
            }
        }
        
        a[a.length-1-cnt] = '0';
        a[a.length-1]='1';
        

        StringBuilder sb = new StringBuilder();
        for(int i = 0;i<s.length() ; i++)
        {
            sb = sb.append(a[i]);
        }

        return sb.toString();
    }
}


class Solution {
    public String maximumOddBinaryNumber(String s) {
        int cnt = 0;
        for(int i=0;i<s.length();i++)
        {
            if(s.charAt(i)=='1')
                cnt++;
        }
        StringBuilder sb = new StringBuilder();
        for(int i=0;i<cnt-1;i++)
        {
           sb.append('1');
        }
        for(int i=0;i<s.length()-cnt;i++)
        {
           sb.append('0');
        }
         sb.append('1');
        return sb.toString();
    }
}
